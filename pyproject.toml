[project]
name = "commit-lint"
version = "v0.3.1"
description = "A configurable linter for better commit messages"
authors = [{ name = "Chris McQuaid", email = "chris@thetestlabs.io" }]
requires-python = ">=3.9,<4.0"
readme = "README.md"
license = { text = "MIT" }
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Version Control :: Git",
    "Topic :: Software Development :: Quality Assurance",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "pydantic (>=2.10.6,<3.0.0)",
    "typer (>=0.15.2,<0.16.0)",
    "questionary (>=2.1.0,<3.0.0)",
    "pyyaml (>=6.0.2,<7.0.0)",
    "rich (>=13.9.4,<15.0.0)",
    "tomli (>=2.2.1,<3.0.0)",
    "tomli-w (>=1.2.0,<2.0.0)",
    "python-semantic-release==9.21.0",
]

[project.urls]
changelog = "https://github.com/thetestlabs/commit-lint/blob/main/CHANGELOG.md"
documentation = "https://commit-lint.readthedocs.io"
homepage = "https://commit-lint.readthedocs.io"
issues = "https://github.com/thetestlabs/commit-lint/issues"
repository = "http://github.com/thetestlabs/commit-lint.git"

[project.scripts]
commit-lint = "commit_lint.cli:app"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "python-semantic-release==v9.21.0",
    "pytest>=8.3.5,<9",
    "pytest-cov>=6.0.0,<7",
    "isort>=6.0.1",
    "ruff>=0.11.2",
]

[tool.isort]
length_sort = true
force_single_line = true

[tool.ruff]
fix = true
line-length = 120
src = ["commit_lint", "test"]

[tool.ruff.format]
docstring-code-format = true
line-ending = "lf"

[tool.ruff.lint]
allowed-confusables = ["−", "∗"]

[tool.ruff.lint.mccabe]
max-complexity = 5

[tool.semantic_release]
build_command = """
    uv build
"""
major_on_zero = true
tag_format = "v{version}"
version_toml = ["pyproject.toml:project.version:tf"]

[tool.semantic_release.changelog.default_templates]
mask_initial_release = true

[tool.semantic_release.changelog.environment]
template_dir = "changelogs"

[tool.semantic_release.remote.token]
env = "REL_TOKEN"

[tool.commit_lint]
# Common configuration
format_type = "conventional"  # or "github", "jira", "custom"

# Conventional Commits format config
types = ["feat", "fix", "docs", "style", "refactor", "perf", "test", "build", "ci", "chore", "revert"]
max_subject_length = 100
subject_case = "lower"
scope_required = false
allowed_breaking_changes = ["feat", "fix"]
no_period_end = true

# GitHub style config (applicable when format_type = "github")
issue_reference_required = false
keywords = ["Fixes", "Closes", "Resolves"]

# Jira style config (applicable when format_type = "jira")
jira_project_keys = ["PROJ", "TEST"]
require_issue_id = true

# Custom format config
custom_pattern = "^\\[\\w+\\] .+$"  # For fully custom formats
